from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import openai
import random

TELEGRAM_TOKEN = "TELEGRAM_TOKEN"
OPENAI_API_KEY = "OPENAI_API_KEY"
openai.api_key = OPENAI_API_KEY

REACTIONS = [
    "üòé –õ–µ–≥–∫–æ—Ç–Ω—è! –û—Å—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å:",
    "üß† –¶–µ –±—É–ª–æ —Ü—ñ–∫–∞–≤–æ! –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∏–∂—á–µ:",
    "üí™ –ó–∞—Ä–∞–∑ –≤–∏—Ä—ñ—à–∏–º–æ!",
    "üî• –õ–æ–≤–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å!",
    "‚úÖ –ì–æ—Ç–æ–≤–æ:"
]

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢–∏ —à–∫—ñ–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —á—ñ—Ç–∫–æ, –ø—Ä–æ—Å—Ç–æ —ñ –∑ –ø—Ä–∏–∫–æ–ª–æ–º."},
                {"role": "user", "content": user_message}
            ]
        )
        reply = response["choices"][0]["message"]["content"]
        intro = random.choice(REACTIONS)
        await update.message.reply_text(f"{intro}\n\n{reply}", parse_mode='Markdown')
    except Exception as e:
        await update.message.reply_text("–£–ø—Å! –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ üß®")

app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
app.run_polling()
